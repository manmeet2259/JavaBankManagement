package data;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import bus.Customer;
import bus.Department;

public class CustomerDB {
	static private Connection myConnection;
	static private String mySQLStatement = null;	
	static private String mySQLQuery = null;
	static private Statement myStatemnt = null;
	static private ResultSet myResultSet = null;
	static private Customer aCustomer = null;
	/*
	 * return 1 if added successfully otherwise 0
	 */
	public static int insert(Customer aNewCustomer) throws SQLException {
		myConnection = DBConnection.getConnection();		
		mySQLStatement = "Insert into CUSTOMER(CUSTOMER_ID, FIRST_NAME, LAST_NAME, SIN)  values( " 
                                                    + aNewCustomer.getId() 
                                                    + ", \'" 
                                                    + aNewCustomer.getFirstName()  
                                                    + "\', \'"
                                                    + aNewCustomer.getLastName()  
                                                    + "\', "
                                                    + aNewCustomer.getPin()  
                                                    + ")" ;
		try {
			myStatemnt = myConnection.createStatement();
			int rowAffected = myStatemnt.executeUpdate(mySQLStatement);
			     myConnection.commit();			
			if(rowAffected > 0) {
				return 1;
			}else {
				return 0;
			}
		} catch (SQLException e) {
			e.printStackTrace();
			return 0;
		}
	}
	
	public static int update(Customer newCustomer) throws SQLException {
		
		myConnection = DBConnection.getConnection();
		
		mySQLStatement = "update customer set first_name = ?, last_name = ?, sin = ? where customer_id = ?";

		try {
			
			PreparedStatement updateCustomer = myConnection.prepareStatement(mySQLStatement);
			
			updateCustomer.setString(1, newCustomer.getFirstName());
			updateCustomer.setString(2, newCustomer.getLastName());
			updateCustomer.setInt(3, newCustomer.getPin());
			updateCustomer.setInt(4, newCustomer.getId());
			
			if (updateCustomer.executeUpdate() >=1)
			{
				return 1;
			}
			else
			{
				return 0;
			}
			
			
		} catch (SQLException e) {
			e.printStackTrace();
			return 0;
		}
	}
	
	/**
	 * 
	 * @param id primary key of vehicle
	 * @return	return 1 if removed successfully otherwise 0
	 * @throws SQLException
	 */
	public static int delete(int id ) throws SQLException {
		myConnection = DBConnection.getConnection();
		
		mySQLStatement = "Delete FROM CUSTOMER WHERE CUSTOMER_ID = "  + id  ;
		
		try {
			myStatemnt = myConnection.createStatement();
			int rowAffected = myStatemnt.executeUpdate(mySQLStatement);
			
			myConnection.commit();	
			
				if(rowAffected > 0) {
					return 1;
				}else {
					return 0;
				}
		} catch (SQLException e) {
			e.printStackTrace();
			return 0;
		}
	}
	
	public static Customer search(int id) throws SQLException, SQLException{
		
		myConnection = DBConnection.getConnection();
		
		mySQLQuery = "SELECT * FROM CUSTOMER WHERE  CUSTOMER_ID = " + id ;
		
		myStatemnt = myConnection.createStatement();
		
		myResultSet = myStatemnt.executeQuery(mySQLQuery);
		
		if(myResultSet.next()) {
			aCustomer = new Customer(Integer.parseInt(myResultSet.getString(1)), myResultSet.getString(2),myResultSet.getString(3),Integer.parseInt(myResultSet.getString(4))   );
		}		
		return aCustomer;
	}
	
	public static ArrayList<Customer> select() throws SQLException, NumberFormatException, SQLException{
		
		myConnection = DBConnection.getConnection();
		
		mySQLQuery = "SELECT * FROM CUSTOMER";
		
		myStatemnt = myConnection.createStatement();
		myResultSet = myStatemnt.executeQuery(mySQLQuery);
		
		ArrayList<Customer> myList = new ArrayList<Customer>();
		while(myResultSet.next()) {
			
			aCustomer = new Customer(Integer.parseInt(myResultSet.getString(1)), myResultSet.getString(2),myResultSet.getString(3),Integer.parseInt(myResultSet.getString(4))   );
			
			myList.add(aCustomer);
		}
		
		return myList;
	}


}
